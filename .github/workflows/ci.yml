name: CI
run-name: |
  ${{
    format(
      'CI pipeline for {0} by @{1}',
      github.event_name == 'pull_request' && format('#{0}', github.event.number) || github.ref_name,
      github.actor
    )
  }}

on:
  push:
    paths:
      - "src/**"
      - "tests/**"
      - "examples/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "build.rs"
      - ".github/workflows/ci.yml"
      - ".config/nextest.toml"
  pull_request:
    branches:
      - master
      - "release/*"

env:
  RUST_BACKTRACE: short
  RUSTFLAGS: '-D warnings'

jobs:
  clippy:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Lint code
        run: cargo clippy --all-targets --workspace --locked

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --check --all

  test:
    name: Run tests
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Install nextest (if not cached)
        run: cargo nextest --version || cargo install --locked cargo-nextest

      - name: Run tests
        run: cargo nextest run --profile ci --run-ignored all --locked --all-targets --workspace

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: (!cancelled())
        with:
          check_run: false
          comment_mode: ${{ (github.event_name == 'pull_request') && 'always' || 'off' }}
          files: |
            target/nextest/ci/junit.xml

  # Adding this because we don't want to run the whole build workflow on each
  # push
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Compile project
        run: cargo build --workspace --all-targets --release --locked
