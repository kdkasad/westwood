name: Build Westwood binaries

on:
  workflow_call:
  pull_request:
    branches:
      - master
      - 'release/*'

permissions:
  id-token: write
  contents: read
  attestations: write

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: westwood-x86_64-windows.exe

          - os: windows-latest
            target: i686-pc-windows-msvc
            artifact: westwood-i686-windows.exe

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact: westwood-aarch64-windows.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: westwood-x86_64-macos

          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: westwood-aarch64-macos

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: westwood-x86_64-linux-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: westwood-aarch64-linux-gnu
            use-cross: true

          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            artifact: westwood-armv7hf-linux-gnu
            use-cross: true

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact: westwood-x86_64-linux-musl

    steps:
      - name: Install musl-gcc
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: sudo apt-get install musl-tools

      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache build artifacts
        uses: Swatinem/rust-cache@v2

      - name: Compile
        if: ${{ matrix.use-cross != true }}
        run: cargo build --target ${{ matrix.target }} --release --locked

      - name: Install cross (if not cached)
        if: ${{ matrix.use-cross == true }}
        run: cross || cargo install cross

      - name: Compile (using cross)
        if: ${{ matrix.use-cross == true }}
        run: cross build --target ${{ matrix.target }} --release --locked

      - name: Rename binary for target
        id: rename
        env:
          SRC: ${{ format(
              'target/{0}/release/westwood{1}',
              matrix.target,
              contains(matrix.os, 'windows') && '.exe' || ''
            ) }}
          DST: ${{ format('target/{0}/release/{1}', matrix.target, matrix.artifact) }}
        shell: bash
        run: |
          mv "$SRC" "$DST"
          echo "path=$DST" >> "$GITHUB_OUTPUT"

      - name: Attest build provenance
        # Runs only if called from a workflow triggered by a release
        if: ${{ github.event_name == 'workflow_call' && github.event.release != null }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ${{ steps.rename.outputs.path }}

      - name: Upload archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ steps.rename.outputs.path }}
